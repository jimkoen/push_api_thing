openapi: 3.0.0
info:
  title: "Backup-Assistant Push-Service"
  description: "Documentation of the Assistant API"
  version: 0.0.1

tags:
  - name: "subscription"
    description: "Everything related to subscriptions"

paths:

  /test:
    post:
      tags:
        - "testing"
      summary: "Endpoint to test validator functionality"
      description: "Endpoint to test validator functionality"
      operationId: "test_testing"
      requestBody:
        description: "Test information"
        required: true
        content:
          application/json:
            schema:
              $ref: './requests/schemas/testing/test.schema.json'
      responses:
        "200":
          description: "Successful Operation"
        "500":
          description: "Internal Server Error"

  /vapidPublicKey:
    get:
      tags:
        - "vapidKey"
      summary: "Returns the vapid public key, that is necessary to fulfill the VAPID standard."
      description: "This endpoint provides the vapid public key, that both client and vendor endpoint use to validate the OEM servers authenticity."
      operationId: "vapidKey_getVapidKey"
      responses:
        "200":
          description: "Successful operation"
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: "Internal Server Error"

  /subscription:
    post:
      tags:
        - "subscription"
      summary: "Subscribes the user to the push service"
      description: "This endpoint is used to subscribe the user to the service. There is no authentication mechanism, users are recognized by their unique subscription keypair, as the public key and user specific vendor endpoint need to remain secret anyways."
      operationId: "subscription_addSubscription"
      requestBody:
        description: "Subscription information with which a subscription will be generated"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metadata'
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: './responses/schemas/subscribe/addSubscription.schema.json'
        "405":
          description: "Invalid Input"

    get:
      tags:
        - "subscription"
      summary: "Returns a collection of push subscriptions the user is subscribed to"

      operationId: "subscription_getAllSubscriptions"
      requestBody:
        description: "An empty object indicates, that all subscriptions should be obtained"
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: './responses/schemas/subscribe/getAllSubscriptions.schema.json'
        "405":
          "description": "Invalid Input"

  /subscription/{id}:
    delete:
      tags:
        - "subscription"
      summary: "Removes user from the specified push subscription"

      operationId: "subscription_removeSubscription"
      description: "Removes the user from a subscription, by matching the UUID of that subscription to all existing subscriptions."
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the active push subscription to be deleted"
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: An object representing the metadata associated with a push subscription
                subscription:
                  $ref: '#/components/schemas/Subscription'
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: './responses/schemas/subscribe/removeSubscription.schema.json'
        "405":
          "description": "Invalid Input"
components:
  schemas:
    Metadata:
      $ref: 'common/metadata.schema.json'

    Subscription:
      $ref: 'common/subscription.schema.json'
